//! > detect byte order mark

//! > cairo_code
fn main() {
   let text = "\u{FEFF}HelloWorld";
}

//! > diagnostics
warning: Unused variable. Consider ignoring by prefixing with `_`.
 --> lib.cairo:2:8
  |
2 |    let text = "\u{FEFF}HelloWorld";
  |        ----
  |
error: Type annotations needed. Failed to infer ?0.
 --> lib.cairo:2:15
  |
2 |    let text = "\u{FEFF}HelloWorld";
  |               ^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
fn main() {
   let text = "\u{FEFF}HelloWorld";
}

//! > ==========================================================================

//! > detect paragraph separator

//! > cairo_code
fn main() {
   let text = "Paragraph\u{2029}Separator";
}

//! > diagnostics
warning: Unused variable. Consider ignoring by prefixing with `_`.
 --> lib.cairo:2:8
  |
2 |    let text = "Paragraph\u{2029}Separator";
  |        ----
  |
error: Type annotations needed. Failed to infer ?0.
 --> lib.cairo:2:15
  |
2 |    let text = "Paragraph\u{2029}Separator";
  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
fn main() {
   let text = "Paragraph\u{2029}Separator";
}

//! > ==========================================================================

//! > detect zero-width joiner

//! > cairo_code
fn main() {
   let text = "Joiner\u{200D}Here";
}

//! > diagnostics
warning: Unused variable. Consider ignoring by prefixing with `_`.
 --> lib.cairo:2:8
  |
2 |    let text = "Joiner\u{200D}Here";
  |        ----
  |
error: Type annotations needed. Failed to infer ?0.
 --> lib.cairo:2:15
  |
2 |    let text = "Joiner\u{200D}Here";
  |               ^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
fn main() {
   let text = "Joiner\u{200D}Here";
}

//! > ==========================================================================

//! > detect zero-width non-joiner

//! > cairo_code
fn main() {
   let text = "NonJoiner\u{200C}Here";
}

//! > diagnostics
warning: Unused variable. Consider ignoring by prefixing with `_`.
 --> lib.cairo:2:8
  |
2 |    let text = "NonJoiner\u{200C}Here";
  |        ----
  |
error: Type annotations needed. Failed to infer ?0.
 --> lib.cairo:2:15
  |
2 |    let text = "NonJoiner\u{200C}Here";
  |               ^^^^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
fn main() {
   let text = "NonJoiner\u{200C}Here";
}

//! > ==========================================================================

//! > detect zero-width space

//! > cairo_code
fn main() {
   let text = "Hello\u{200B}World!";
}

//! > diagnostics
warning: Unused variable. Consider ignoring by prefixing with `_`.
 --> lib.cairo:2:8
  |
2 |    let text = "Hello\u{200B}World!";
  |        ----
  |
error: Type annotations needed. Failed to infer ?0.
 --> lib.cairo:2:15
  |
2 |    let text = "Hello\u{200B}World!";
  |               ^^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
fn main() {
   let text = "Hello\u{200B}World!";
}

//! > ==========================================================================

//! > loop check for soft hyphen

//! > cairo_code
fn main() {
   let text = "Hyphen\u{00AD}Here";
}

//! > diagnostics
warning: Unused variable. Consider ignoring by prefixing with `_`.
 --> lib.cairo:2:8
  |
2 |    let text = "Hyphen\u{00AD}Here";
  |        ----
  |
error: Type annotations needed. Failed to infer ?0.
 --> lib.cairo:2:15
  |
2 |    let text = "Hyphen\u{00AD}Here";
  |               ^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
fn main() {
   let text = "Hyphen\u{00AD}Here";
}
